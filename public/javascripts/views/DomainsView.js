// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.DomainsView = (function(_super) {

    __extends(DomainsView, _super);

    function DomainsView() {
      return DomainsView.__super__.constructor.apply(this, arguments);
    }

    DomainsView.prototype.el = $('#domains');

    DomainsView.prototype.initialize = function() {
      this.listenTo(App.domains, 'add', this.addDomain);
      this.listenTo(App.domains, 'reset', this.addAllDomains);
      return App.domains.fetch();
    };

    DomainsView.prototype.addDomain = function(domain) {
      var view;
      if (App.domains.length) {
        this.$el.find('.no-results').hide();
      }
      view = new App.Views.DomainView({
        model: domain
      });
      return this.$('ul').prepend(view.render().el);
    };

    DomainsView.prototype.addAllDomains = function() {
      this.$('ul li').not('.no-results').remove();
      return App.domains.each(this.addDomain, this);
    };

    return DomainsView;

  })(Backbone.View);

}).call(this);
