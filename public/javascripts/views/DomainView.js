// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.DomainView = (function(_super) {

    __extends(DomainView, _super);

    function DomainView() {
      return DomainView.__super__.constructor.apply(this, arguments);
    }

    DomainView.prototype.tagName = 'li';

    DomainView.prototype.template = _.template($('#recent-domain-template').html());

    DomainView.prototype.events = {
      'click .remove': 'clear',
      'click .domain': 'load'
    };

    DomainView.prototype.initialize = function() {
      return this.listenTo(this.model, 'destroy', this.remove);
    };

    DomainView.prototype.render = function(html) {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    DomainView.prototype.clear = function(e) {
      e.preventDefault();
      if (confirm("Are you sure you want to remove " + (this.model.get('url')) + "?")) {
        this.model.destroy();
      }
      if (!App.domains.length) {
        return App.domains_view.$el.find('.no-results').show();
      }
    };

    DomainView.prototype.load = function(e) {
      e.preventDefault();
      if (App.mobile) {
        App.swipe_view.swipe.next();
      }
      App.secret_view.domain.val(this.model.get('url')).trigger('change');
      App.config_view.render(this.model);
      return App.secret_view.focusInput();
    };

    return DomainView;

  })(Backbone.View);

}).call(this);
