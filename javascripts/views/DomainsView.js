// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.DomainsView = (function(_super) {

    __extends(DomainsView, _super);

    function DomainsView() {
      return DomainsView.__super__.constructor.apply(this, arguments);
    }

    DomainsView.prototype.el = $('#recent_domains');

    DomainsView.prototype.initialize = function() {
      app.Domains.on('add', this.addDomain, this);
      app.Domains.on('reset', this.addAllDomains, this);
      return app.Domains.fetch();
    };

    DomainsView.prototype.addDomain = function(domain) {
      var view;
      view = new DomainView({
        model: domain
      });
      return this.$('ul').append(view.render().el);
    };

    DomainsView.prototype.addAllDomains = function() {
      if (app.Domains.length) {
        this.$el.find('.no-results').hide();
        return app.Domains.each(this.addDomain);
      }
    };

    return DomainsView;

  })(Backbone.View);

}).call(this);
