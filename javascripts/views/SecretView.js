// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.SecretView = (function(_super) {

    __extends(SecretView, _super);

    function SecretView() {
      return SecretView.__super__.constructor.apply(this, arguments);
    }

    SecretView.prototype.el = $('#new_secret form');

    SecretView.prototype.events = {
      'change #master': 'toggleMaster',
      'keyup input.required': 'render',
      'focus #secret': 'saveDomain'
    };

    SecretView.prototype.initialize = function() {
      app.Config.bind('change', this.render, this);
      return this.loadMaster();
    };

    SecretView.prototype.saveDomain = function(e) {
      e.target.setSelectionRange(0, e.target.value.length);
      return app.Domains.create({
        url: this.$('#domain').val(),
        config: app.Config.toJSON()
      });
    };

    SecretView.prototype.loadMaster = function() {
      return $('#master').val(app.Config.get('master'));
    };

    SecretView.prototype.focusInput = function() {
      return $('input.required:visible', this.$el).each(function() {
        if (!this.value.length) {
          $(this).focus();
          return false;
        }
      });
    };

    SecretView.prototype.toggleMaster = function() {
      if (app.Config.get('save_all')) {
        return app.ConfigView.saveConfig();
      }
    };

    SecretView.prototype.render = function(model) {
      var config, secret;
      if (model instanceof Backbone.Model) {
        config = model.get('config');
      }
      config || (config = app.Config.toJSON());
      secret = new Secret({
        master: $('#master').val(),
        domain: $('#domain').val(),
        config: config
      });
      if (secret) {
        $('#secret').val(secret.get('secret'));
        if (app.mobile) {
          return $('#secret').show().attr('readonly', false);
        }
      }
    };

    return SecretView;

  })(Backbone.View);

}).call(this);
